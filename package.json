{
    "name": "replacerules",
    "displayName": "Replace Rules",
    "description": "Create search/replace rules using Javascript regular expressions",
    "version": "0.4.2",
    "publisher": "bhughes339",
    "engines": {
        "vscode": "^1.70.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/bhughes339/vscode-replacerules.git"
    },
    "categories": [
        "Other"
    ],
    "icon": "images/icon.png",
    "keywords": [
        "regex",
        "regular expressions",
        "replace",
        "regreplace"
    ],
    "activationEvents": [
        "onCommand:replacerules.runRule",
        "onCommand:replacerules.runRuleset",
        "onCommand:replacerules.pasteAndReplace",
        "onCommand:replacerules.pasteAndReplaceRuleset",
        "onCommand:replacerules.stringifyRegex"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "replace-rules",
                    "title": "Replace Rules",
                    "icon": "$(replace)"
                }
            ]
        },
        "views": {
            "replace-rules": [
                {
                    "id": "Rule",
                    "name": "Rule"
                },
                {
                    "id": "RuleSet",
                    "name": "RuleSet"
                }
            ]
        },
        "menus": {
            "view/item/context": [
              {
                  "command": "replacerules.runRule",
                  "when": "view == Rule",
                  "group": "inline"
              },
              {
                  "command": "replacerules.runRuleset",
                  "when": "view == RuleSet",
                  "group": "inline"
              }
            ],
            "view/title": [
                {
                    "command": "replacerules.refreshRules",
                    "when": "view == Rule",
                    "group": "navigation"
                },
                {
                    "command": "replacerules.refreshRuleSet",
                    "when": "view == RuleSet",
                    "group": "navigation"
                }
            ]
        },
        "commands": [
            {
                "command": "replacerules.runRule",
                "title": "Run Rule...",
                "category": "Replace Rules",
                "icon": "$(play)"
            },
            {
                "command": "replacerules.runRuleset",
                "title": "Run Ruleset...",
                "category": "Replace Rules",
                "icon": "$(play)"
            },
            {
                "command": "replacerules.pasteAndReplace",
                "title": "Run Replace Rule on clipboard and paste...",
                "category": "Replace Rules"
            },
            {
                "command": "replacerules.pasteAndReplaceRuleset",
                "title": "Run Replace Ruleset on clipboard and paste...",
                "category": "Replace Rules"
            },
            {
                "command": "replacerules.stringifyRegex",
                "title": "Stringify regular expression",
                "category": "Replace Rules"
            },
            {
                "command": "replacerules.refreshRules",
                "title": "Refresh Rules",
                "category": "Replace Rules",
                "icon": "$(refresh)"
            },
            {
                "command": "replacerules.refreshRuleSet",
                "title": "Refresh RuleSet",
                "category": "Replace Rules",
                "icon": "$(refresh)"
            }
        ],
        "keybindings": [
            {
                "command": "replacerules.runRule",
                "key": "ctrl+alt+r",
                "mac": "cmd+alt+r",
                "when": "editorTextFocus"
            },
            {
                "command": "replacerules.pasteAndReplace",
                "key": "ctrl+alt+v",
                "mac": "cmd+alt+v",
                "when": "editorTextFocus"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Replace Rules",
            "properties": {
                "replacerules.rules": {
                    "type": "object",
                    "description": "Dictionary of rules for Replace Rules",
                    "patternProperties": {
                        "^(.+)$": {
                            "type": "object",
                            "properties": {
                                "find": {
                                    "type": [
                                        "string",
                                        "array"
                                    ],
                                    "description": "A sequence of regular expressions to be searched on. Can be a single string or an array of strings.",
                                    "default": "(.*)"
                                },
                                "replace": {
                                    "type": [
                                        "string",
                                        "array"
                                    ],
                                    "description": "(Optional) A sequence of regular expressions used as replacements. Can be a single string or an array of strings. If this is an empty string or unspecified, each find will be deleted rather than replaced.",
                                    "default": "$1"
                                },
                                "flags": {
                                    "type": [
                                        "string",
                                        "array"
                                    ],
                                    "description": "(Optional) A set of regex flags to apply to the rule. If only one set of flags is specified, it will be applied to all finds in the rule. The default flags are gm (global, multiline).",
                                    "default": "gm"
                                },
                                "languages": {
                                    "type": "array",
                                    "description": "(Optional) A set of workspace language ids that the rule is restricted to. For example, a rule with 'languages' set to 'typescript' will only appear in the Run Rule... menu if TypeScript is the active language on the active document."
                                },
                                "literal": {
                                    "type": "boolean",
                                    "description": "(Optional) Perform a non-regex, literal search and replace."
                                }
                            },
                            "required": [
                                "find"
                            ],
                            "additionalProperties": false
                        }
                    },
                    "additionalProperties": false
                },
                "replacerules.rulesets": {
                    "type": "object",
                    "description": "Dictionary of rulesets for Replace Rules",
                    "patternProperties": {
                        "^(.+)$": {
                            "type": "object",
                            "properties": {
                                "rules": {
                                    "type": "array",
                                    "description": "List of rules defined in replacerules.rules to run sequentially.",
                                    "minItems": 1,
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/vscode": "^1.70.0",
        "@types/glob": "^8.0.0",
        "@types/mocha": "^10.0.0",
        "@types/node": "16.x",
        "@typescript-eslint/eslint-plugin": "^5.38.1",
        "@typescript-eslint/parser": "^5.38.1",
        "eslint": "^8.24.0",
        "glob": "^8.0.3",
        "mocha": "^10.0.0",
        "typescript": "^4.8.4",
        "@vscode/test-electron": "^2.1.5"
    }
}
